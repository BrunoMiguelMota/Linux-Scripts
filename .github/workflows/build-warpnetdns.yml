---
name: Build and Release WarpNETDNS

'on':
  push:
    branches:
      - main
    paths:
      - 'install_warpnetdns.sh'
      - '.github/workflows/build-warpnetdns.yml'
  workflow_dispatch:
    inputs:
      adguard_version:
        description: 'AdGuard Home version to build (e.g., v0.107.52)'
        required: false
        default: 'v0.107.52'

jobs:
  build:
    name: Build WarpNETDNS
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: linux
            arch: arm
          - os: linux
            arch: armv7

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y make git gcc

      - name: Build WarpNETDNS
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          ADGUARD_VERSION: >-
            ${{ github.event.inputs.adguard_version || 'v0.107.52' }}
          WORK_DIR: ${{ github.workspace }}/warpnetdns-build
        run: |
          chmod +x install_warpnetdns.sh
          ./install_warpnetdns.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: warpnetdns_${{ matrix.os }}_${{ matrix.arch }}
          path: >-
            warpnetdns-build/warpnetdns_${{ matrix.os }}_${{ matrix.arch }}.tar.gz
          retention-days: 7

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          find artifacts -name "*.tar.gz" -exec cp {} release-assets/ \;
          ls -lh release-assets/

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d-%H%M')" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          repository: BrunoMiguelMota/warpnetdns
          tag_name: v1.0.${{ github.run_number }}
          name: WarpNETDNS Release ${{ steps.date.outputs.date }}
          body: |
            # Warp NET DNS Release

            Automated build of Warp NET DNS (rebranded AdGuard Home).

            ## Downloads
            Choose the appropriate package for your system:
            - `warpnetdns_linux_amd64.tar.gz` - Linux x86_64
            - `warpnetdns_linux_arm64.tar.gz` - Linux ARM64
            - `warpnetdns_linux_arm.tar.gz` - Linux ARM
            - `warpnetdns_linux_armv7.tar.gz` - Linux ARMv7

            ## Installation
            ```bash
            # Download the appropriate package
            wget https://github.com/BrunoMiguelMota/warpnetdns/releases/\
            latest/download/warpnetdns_linux_amd64.tar.gz

            # Extract
            tar xzf warpnetdns_linux_amd64.tar.gz

            # Run
            sudo ./WarpNETDNS
            ```

            Built from AdGuard Home version: \
            ${{ github.event.inputs.adguard_version || 'v0.107.52' }}
          draft: false
          prerelease: false
          files: release-assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.WARPNETDNS_RELEASE_TOKEN }}

      - name: Update latest tag
        run: |
          # Clone the warpnetdns repository
          git clone https://${GITHUB_TOKEN}@github.com/BrunoMiguelMota/warpnetdns.git warpnetdns-repo
          cd warpnetdns-repo
          
          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Update latest tag
          git tag -f latest v1.0.${{ github.run_number }}
          git push -f origin latest
        env:
          GITHUB_TOKEN: ${{ secrets.WARPNETDNS_RELEASE_TOKEN }}
